|dht_d10_lite_test_top
MAX10_CLK1_50 => pll:u2.inclk0
KEY[0] => dht_driver:u1.rst
KEY[1] => dht_driver:u1.req
GPIO[26] <> dht_driver:u1.data
HEX5[6] << Mux6.DB_MAX_OUTPUT_PORT_TYPE
HEX5[5] << Mux5.DB_MAX_OUTPUT_PORT_TYPE
HEX5[4] << Mux4.DB_MAX_OUTPUT_PORT_TYPE
HEX5[3] << Mux3.DB_MAX_OUTPUT_PORT_TYPE
HEX5[2] << Mux2.DB_MAX_OUTPUT_PORT_TYPE
HEX5[1] << Mux1.DB_MAX_OUTPUT_PORT_TYPE
HEX5[0] << Mux0.DB_MAX_OUTPUT_PORT_TYPE
HEX4[6] << Mux13.DB_MAX_OUTPUT_PORT_TYPE
HEX4[5] << Mux12.DB_MAX_OUTPUT_PORT_TYPE
HEX4[4] << Mux11.DB_MAX_OUTPUT_PORT_TYPE
HEX4[3] << Mux10.DB_MAX_OUTPUT_PORT_TYPE
HEX4[2] << Mux9.DB_MAX_OUTPUT_PORT_TYPE
HEX4[1] << Mux8.DB_MAX_OUTPUT_PORT_TYPE
HEX4[0] << Mux7.DB_MAX_OUTPUT_PORT_TYPE
HEX3[6] << HEX3.DB_MAX_OUTPUT_PORT_TYPE
HEX3[5] << HEX3.DB_MAX_OUTPUT_PORT_TYPE
HEX3[4] << HEX3.DB_MAX_OUTPUT_PORT_TYPE
HEX3[3] << HEX3.DB_MAX_OUTPUT_PORT_TYPE
HEX3[2] << HEX3.DB_MAX_OUTPUT_PORT_TYPE
HEX3[1] << HEX3.DB_MAX_OUTPUT_PORT_TYPE
HEX3[0] << HEX3.DB_MAX_OUTPUT_PORT_TYPE
HEX2[6] << HEX2.DB_MAX_OUTPUT_PORT_TYPE
HEX2[5] << HEX2.DB_MAX_OUTPUT_PORT_TYPE
HEX2[4] << HEX2.DB_MAX_OUTPUT_PORT_TYPE
HEX2[3] << HEX2.DB_MAX_OUTPUT_PORT_TYPE
HEX2[2] << HEX2.DB_MAX_OUTPUT_PORT_TYPE
HEX2[1] << HEX2.DB_MAX_OUTPUT_PORT_TYPE
HEX2[0] << HEX2.DB_MAX_OUTPUT_PORT_TYPE
HEX1[6] << HEX1.DB_MAX_OUTPUT_PORT_TYPE
HEX1[5] << HEX1.DB_MAX_OUTPUT_PORT_TYPE
HEX1[4] << HEX1.DB_MAX_OUTPUT_PORT_TYPE
HEX1[3] << HEX1.DB_MAX_OUTPUT_PORT_TYPE
HEX1[2] << HEX1.DB_MAX_OUTPUT_PORT_TYPE
HEX1[1] << HEX1.DB_MAX_OUTPUT_PORT_TYPE
HEX1[0] << HEX1.DB_MAX_OUTPUT_PORT_TYPE
HEX0[6] << HEX0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[5] << HEX0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[4] << HEX0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[3] << HEX0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[2] << HEX0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[1] << HEX0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[0] << HEX0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[0] << dht_driver:u1.busy
LEDR[1] << dht_driver:u1.isvalid
LEDR[2] << dht_driver:u1.state[0]
LEDR[3] << dht_driver:u1.state[1]
LEDR[4] << dht_driver:u1.state[2]
LEDR[5] << dht_driver:u1.state[3]
SW[0] => HEX3.OUTPUTSELECT
SW[0] => HEX3.OUTPUTSELECT
SW[0] => HEX3.OUTPUTSELECT
SW[0] => HEX3.OUTPUTSELECT
SW[0] => HEX3.OUTPUTSELECT
SW[0] => HEX3.OUTPUTSELECT
SW[0] => HEX3.OUTPUTSELECT
SW[0] => HEX2.OUTPUTSELECT
SW[0] => HEX2.OUTPUTSELECT
SW[0] => HEX2.OUTPUTSELECT
SW[0] => HEX2.OUTPUTSELECT
SW[0] => HEX2.OUTPUTSELECT
SW[0] => HEX2.OUTPUTSELECT
SW[0] => HEX2.OUTPUTSELECT
SW[0] => HEX1.OUTPUTSELECT
SW[0] => HEX1.OUTPUTSELECT
SW[0] => HEX1.OUTPUTSELECT
SW[0] => HEX1.OUTPUTSELECT
SW[0] => HEX1.OUTPUTSELECT
SW[0] => HEX1.OUTPUTSELECT
SW[0] => HEX1.OUTPUTSELECT
SW[0] => HEX0.OUTPUTSELECT
SW[0] => HEX0.OUTPUTSELECT
SW[0] => HEX0.OUTPUTSELECT
SW[0] => HEX0.OUTPUTSELECT
SW[0] => HEX0.OUTPUTSELECT
SW[0] => HEX0.OUTPUTSELECT
SW[0] => HEX0.OUTPUTSELECT
ARDUINO_IO[0] << dht_driver:u1.debug


|dht_d10_lite_test_top|dht_driver:u1
clk => it[0]~reg0.CLK
clk => it[1]~reg0.CLK
clk => it[2]~reg0.CLK
clk => it[3]~reg0.CLK
clk => it[4]~reg0.CLK
clk => it[5]~reg0.CLK
clk => debug_t.CLK
clk => isvalid~reg0.CLK
clk => reading[0]~reg0.CLK
clk => reading[1]~reg0.CLK
clk => reading[2]~reg0.CLK
clk => reading[3]~reg0.CLK
clk => reading[4]~reg0.CLK
clk => reading[5]~reg0.CLK
clk => reading[6]~reg0.CLK
clk => reading[7]~reg0.CLK
clk => reading[8]~reg0.CLK
clk => reading[9]~reg0.CLK
clk => reading[10]~reg0.CLK
clk => reading[11]~reg0.CLK
clk => reading[12]~reg0.CLK
clk => reading[13]~reg0.CLK
clk => reading[14]~reg0.CLK
clk => reading[15]~reg0.CLK
clk => reading[16]~reg0.CLK
clk => reading[17]~reg0.CLK
clk => reading[18]~reg0.CLK
clk => reading[19]~reg0.CLK
clk => reading[20]~reg0.CLK
clk => reading[21]~reg0.CLK
clk => reading[22]~reg0.CLK
clk => reading[23]~reg0.CLK
clk => reading[24]~reg0.CLK
clk => reading[25]~reg0.CLK
clk => reading[26]~reg0.CLK
clk => reading[27]~reg0.CLK
clk => reading[28]~reg0.CLK
clk => reading[29]~reg0.CLK
clk => reading[30]~reg0.CLK
clk => reading[31]~reg0.CLK
clk => \dth_sm:bit_stream[0].CLK
clk => \dth_sm:bit_stream[1].CLK
clk => \dth_sm:bit_stream[2].CLK
clk => \dth_sm:bit_stream[3].CLK
clk => \dth_sm:bit_stream[4].CLK
clk => \dth_sm:bit_stream[5].CLK
clk => \dth_sm:bit_stream[6].CLK
clk => \dth_sm:bit_stream[7].CLK
clk => \dth_sm:bit_stream[8].CLK
clk => \dth_sm:bit_stream[9].CLK
clk => \dth_sm:bit_stream[10].CLK
clk => \dth_sm:bit_stream[11].CLK
clk => \dth_sm:bit_stream[12].CLK
clk => \dth_sm:bit_stream[13].CLK
clk => \dth_sm:bit_stream[14].CLK
clk => \dth_sm:bit_stream[15].CLK
clk => \dth_sm:bit_stream[16].CLK
clk => \dth_sm:bit_stream[17].CLK
clk => \dth_sm:bit_stream[18].CLK
clk => \dth_sm:bit_stream[19].CLK
clk => \dth_sm:bit_stream[20].CLK
clk => \dth_sm:bit_stream[21].CLK
clk => \dth_sm:bit_stream[22].CLK
clk => \dth_sm:bit_stream[23].CLK
clk => \dth_sm:bit_stream[24].CLK
clk => \dth_sm:bit_stream[25].CLK
clk => \dth_sm:bit_stream[26].CLK
clk => \dth_sm:bit_stream[27].CLK
clk => \dth_sm:bit_stream[28].CLK
clk => \dth_sm:bit_stream[29].CLK
clk => \dth_sm:bit_stream[30].CLK
clk => \dth_sm:bit_stream[31].CLK
clk => \dth_sm:bit_stream[32].CLK
clk => \dth_sm:bit_stream[33].CLK
clk => \dth_sm:bit_stream[34].CLK
clk => \dth_sm:bit_stream[35].CLK
clk => \dth_sm:bit_stream[36].CLK
clk => \dth_sm:bit_stream[37].CLK
clk => \dth_sm:bit_stream[38].CLK
clk => \dth_sm:bit_stream[39].CLK
clk => \dth_sm:n[0].CLK
clk => \dth_sm:n[1].CLK
clk => \dth_sm:n[2].CLK
clk => \dth_sm:n[3].CLK
clk => \dth_sm:n[4].CLK
clk => \dth_sm:n[5].CLK
clk => \dth_sm:i[0].CLK
clk => \dth_sm:i[1].CLK
clk => \dth_sm:i[2].CLK
clk => \dth_sm:i[3].CLK
clk => \dth_sm:i[4].CLK
clk => \dth_sm:i[5].CLK
clk => \dth_sm:i[6].CLK
clk => \dth_sm:i[7].CLK
clk => \dth_sm:i[8].CLK
clk => \dth_sm:i[9].CLK
clk => \dth_sm:i[10].CLK
clk => \dth_sm:i[11].CLK
clk => \dth_sm:i[12].CLK
clk => \dth_sm:i[13].CLK
clk => \dth_sm:i[14].CLK
clk => \dth_sm:i[15].CLK
clk => \dth_sm:i[16].CLK
clk => \dth_sm:i[17].CLK
clk => \dth_sm:i[18].CLK
clk => \dth_sm:i[19].CLK
clk => dht_state~1.DATAIN
rst => isvalid~reg0.ACLR
rst => reading[0]~reg0.ACLR
rst => reading[1]~reg0.ACLR
rst => reading[2]~reg0.ACLR
rst => reading[3]~reg0.ACLR
rst => reading[4]~reg0.ACLR
rst => reading[5]~reg0.ACLR
rst => reading[6]~reg0.ACLR
rst => reading[7]~reg0.ACLR
rst => reading[8]~reg0.ACLR
rst => reading[9]~reg0.ACLR
rst => reading[10]~reg0.ACLR
rst => reading[11]~reg0.ACLR
rst => reading[12]~reg0.ACLR
rst => reading[13]~reg0.ACLR
rst => reading[14]~reg0.ACLR
rst => reading[15]~reg0.ACLR
rst => reading[16]~reg0.ACLR
rst => reading[17]~reg0.ACLR
rst => reading[18]~reg0.ACLR
rst => reading[19]~reg0.ACLR
rst => reading[20]~reg0.ACLR
rst => reading[21]~reg0.ACLR
rst => reading[22]~reg0.ACLR
rst => reading[23]~reg0.ACLR
rst => reading[24]~reg0.ACLR
rst => reading[25]~reg0.ACLR
rst => reading[26]~reg0.ACLR
rst => reading[27]~reg0.ACLR
rst => reading[28]~reg0.ACLR
rst => reading[29]~reg0.ACLR
rst => reading[30]~reg0.ACLR
rst => reading[31]~reg0.ACLR
rst => \dth_sm:bit_stream[0].ACLR
rst => \dth_sm:bit_stream[1].ACLR
rst => \dth_sm:bit_stream[2].ACLR
rst => \dth_sm:bit_stream[3].ACLR
rst => \dth_sm:bit_stream[4].ACLR
rst => \dth_sm:bit_stream[5].ACLR
rst => \dth_sm:bit_stream[6].ACLR
rst => \dth_sm:bit_stream[7].ACLR
rst => \dth_sm:bit_stream[8].ACLR
rst => \dth_sm:bit_stream[9].ACLR
rst => \dth_sm:bit_stream[10].ACLR
rst => \dth_sm:bit_stream[11].ACLR
rst => \dth_sm:bit_stream[12].ACLR
rst => \dth_sm:bit_stream[13].ACLR
rst => \dth_sm:bit_stream[14].ACLR
rst => \dth_sm:bit_stream[15].ACLR
rst => \dth_sm:bit_stream[16].ACLR
rst => \dth_sm:bit_stream[17].ACLR
rst => \dth_sm:bit_stream[18].ACLR
rst => \dth_sm:bit_stream[19].ACLR
rst => \dth_sm:bit_stream[20].ACLR
rst => \dth_sm:bit_stream[21].ACLR
rst => \dth_sm:bit_stream[22].ACLR
rst => \dth_sm:bit_stream[23].ACLR
rst => \dth_sm:bit_stream[24].ACLR
rst => \dth_sm:bit_stream[25].ACLR
rst => \dth_sm:bit_stream[26].ACLR
rst => \dth_sm:bit_stream[27].ACLR
rst => \dth_sm:bit_stream[28].ACLR
rst => \dth_sm:bit_stream[29].ACLR
rst => \dth_sm:bit_stream[30].ACLR
rst => \dth_sm:bit_stream[31].ACLR
rst => \dth_sm:bit_stream[32].ACLR
rst => \dth_sm:bit_stream[33].ACLR
rst => \dth_sm:bit_stream[34].ACLR
rst => \dth_sm:bit_stream[35].ACLR
rst => \dth_sm:bit_stream[36].ACLR
rst => \dth_sm:bit_stream[37].ACLR
rst => \dth_sm:bit_stream[38].ACLR
rst => \dth_sm:bit_stream[39].ACLR
rst => \dth_sm:n[0].ACLR
rst => \dth_sm:n[1].ACLR
rst => \dth_sm:n[2].ACLR
rst => \dth_sm:n[3].ACLR
rst => \dth_sm:n[4].ACLR
rst => \dth_sm:n[5].ACLR
rst => \dth_sm:i[0].ACLR
rst => \dth_sm:i[1].ACLR
rst => \dth_sm:i[2].ACLR
rst => \dth_sm:i[3].ACLR
rst => \dth_sm:i[4].ACLR
rst => \dth_sm:i[5].ACLR
rst => \dth_sm:i[6].ACLR
rst => \dth_sm:i[7].ACLR
rst => \dth_sm:i[8].ACLR
rst => \dth_sm:i[9].ACLR
rst => \dth_sm:i[10].ACLR
rst => \dth_sm:i[11].ACLR
rst => \dth_sm:i[12].ACLR
rst => \dth_sm:i[13].ACLR
rst => \dth_sm:i[14].ACLR
rst => \dth_sm:i[15].ACLR
rst => \dth_sm:i[16].ACLR
rst => \dth_sm:i[17].ACLR
rst => \dth_sm:i[18].ACLR
rst => \dth_sm:i[19].ACLR
rst => dht_state~3.DATAIN
rst => it[0]~reg0.ENA
rst => debug_t.ENA
rst => it[5]~reg0.ENA
rst => it[4]~reg0.ENA
rst => it[3]~reg0.ENA
rst => it[2]~reg0.ENA
rst => it[1]~reg0.ENA
data <> data
req => Selector21.IN4
req => isvalid.OUTPUTSELECT
req => Selector22.IN1
busy <= busy.DB_MAX_OUTPUT_PORT_TYPE
isvalid <= isvalid~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[0] <= reading[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[1] <= reading[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[2] <= reading[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[3] <= reading[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[4] <= reading[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[5] <= reading[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[6] <= reading[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[7] <= reading[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[8] <= reading[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[9] <= reading[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[10] <= reading[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[11] <= reading[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[12] <= reading[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[13] <= reading[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[14] <= reading[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[15] <= reading[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[16] <= reading[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[17] <= reading[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[18] <= reading[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[19] <= reading[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[20] <= reading[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[21] <= reading[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[22] <= reading[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[23] <= reading[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[24] <= reading[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[25] <= reading[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[26] <= reading[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[27] <= reading[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[28] <= reading[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[29] <= reading[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[30] <= reading[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reading[31] <= reading[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[0] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
state[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
state[2] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
state[3] <= state.DB_MAX_OUTPUT_PORT_TYPE
debug <= debug_t.DB_MAX_OUTPUT_PORT_TYPE
it[0] <= it[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
it[1] <= it[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
it[2] <= it[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
it[3] <= it[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
it[4] <= it[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
it[5] <= it[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|dht_d10_lite_test_top|pll:u2
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]


|dht_d10_lite_test_top|pll:u2|altpll:altpll_component
inclk[0] => pll_altpll:auto_generated.inclk[0]
inclk[1] => pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|dht_d10_lite_test_top|pll:u2|altpll:altpll_component|pll_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


